/**
 * Copyright 2021 Hadrien Kohl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code generated by Wire protocol buffer compiler, do not edit.
// Source: io.hadrien.wire.TestGrpcService in test.proto
package io.hadrien.wire

import com.squareup.wire.MessageSink
import com.squareup.wire.MessageSource
import com.squareup.wire.Service
import com.squareup.wire.WireRpc

public interface TestGrpcServiceBlockingServer : Service {
  @WireRpc(
    path = "/io.hadrien.wire.TestGrpcService/Unary",
    requestAdapter = "io.hadrien.wire.Input#ADAPTER",
    responseAdapter = "io.hadrien.wire.Output#ADAPTER"
  )
  public fun Unary(request: Input): Output

  @WireRpc(
    path = "/io.hadrien.wire.TestGrpcService/Outbound",
    requestAdapter = "io.hadrien.wire.Input#ADAPTER",
    responseAdapter = "io.hadrien.wire.Output#ADAPTER"
  )
  public fun Outbound(request: Input, response: MessageSink<Output>): Unit

  @WireRpc(
    path = "/io.hadrien.wire.TestGrpcService/Inbound",
    requestAdapter = "io.hadrien.wire.Input#ADAPTER",
    responseAdapter = "io.hadrien.wire.Output#ADAPTER"
  )
  public fun Inbound(request: MessageSource<Input>): Output

  @WireRpc(
    path = "/io.hadrien.wire.TestGrpcService/InboundOutbound",
    requestAdapter = "io.hadrien.wire.Input#ADAPTER",
    responseAdapter = "io.hadrien.wire.Output#ADAPTER"
  )
  public fun InboundOutbound(request: MessageSource<Input>, response: MessageSink<Output>): Unit
}
